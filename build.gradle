plugins {
    id 'java'
    id 'io.papermc.paperweight.userdev' version "1.5.11"
}

group = 'com.ShadowNightSMP.plugin'
version = '1.3.0'

repositories {
    mavenCentral()
    maven { url 'https://www.jitpack.io' }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = 'papermc'
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven { url = "https://repo.extendedclip.com/content/repositories/placeholderapi/" }
    maven { url = "https://repo.dmulloy2.net/repository/public/" }
    maven { url = "https://repo.onarandombox.com/content/groups/public/" }

}




dependencies {
    implementation "net.dv8tion:JDA:5.0.0-beta.20"
    implementation "org.apache.commons:commons-io:1.3.2"
    implementation "org.javatuples:javatuples:1.2"

    compileOnly 'io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT'
    paperweightDevelopmentBundle("io.papermc.paper:dev-bundle:1.20.4-R0.1-SNAPSHOT")

    compileOnly "me.clip:placeholderapi:2.11.5"
    compileOnly "net.luckperms:api:5.4"
    compileOnly "com.comphenix.protocol:ProtocolLib:4.5.0"
    compileOnly "com.github.TechFortress:GriefPrevention:16.18"
    compileOnly("com.onarandombox.multiversecore:multiverse-core:4.3.12")
}


jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    exclude("META-INF/*.RSA", "META-INF/*.DSA", "META-INF/*.SF")
    processResources.exclude("botToken")

    manifest {
        attributes "Main-Class": "org.shadownight.plugin.shadownight.ShadowNight"
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}




def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    // Configure reobfJar to run when invoking the build task
    assemble {
        dependsOn(reobfJar)
    }
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}


